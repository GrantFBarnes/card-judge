CREATE PROCEDURE IF NOT EXISTS SP_SET_LOSING_STREAK(
    IN VAR_WINNER_PLAYER_ID UUID
)
BEGIN
    DECLARE VAR_LOBBY_ID UUID;
    DECLARE VAR_JUDGE_PLAYER_ID UUID;
    DECLARE VAR_LOBBY_THRESHOLD INT;

    SELECT
        LOBBY_ID
    INTO VAR_LOBBY_ID
    FROM PLAYER
    WHERE ID = VAR_WINNER_PLAYER_ID;

    SELECT
        PLAYER_ID
    INTO VAR_JUDGE_PLAYER_ID
    FROM JUDGE
    WHERE LOBBY_ID = VAR_LOBBY_ID;

    SELECT
        LOSE_STREAK_THRESHOLD
    INTO VAR_LOBBY_THRESHOLD
    FROM LOBBY
    WHERE ID = VAR_LOBBY_ID;

    -- RESET LOSING STREAK OF WINNER
    UPDATE PLAYER
    SET
        LOSING_STREAK = 0
    WHERE ID = VAR_WINNER_PLAYER_ID;

    -- INCREMENT LOSING STREAK OF LOSERS
    UPDATE PLAYER
    SET
        LOSING_STREAK = LOSING_STREAK + 1
    WHERE LOBBY_ID = VAR_LOBBY_ID
      AND IS_ACTIVE = 1
      AND ID <> VAR_WINNER_PLAYER_ID
      AND ID <> VAR_JUDGE_PLAYER_ID;

    -- AWARD CREDIT AFTER BREAKING THRESHOLD
    UPDATE PLAYER
    SET
        CREDITS_SPENT = CREDITS_SPENT - 1
    WHERE LOBBY_ID = VAR_LOBBY_ID
      AND IS_ACTIVE = 1
      AND LOSING_STREAK >= VAR_LOBBY_THRESHOLD;

    INSERT
    INTO LOG_CREDITS_SPENT
        (
            LOBBY_ID,
            USER_ID,
            AMOUNT,
            CATEGORY
        )
    SELECT
        LOBBY_ID,
        USER_ID,
        -1,
        'LOSING-STREAK'
    FROM PLAYER
    WHERE LOBBY_ID = VAR_LOBBY_ID
      AND IS_ACTIVE = 1
      AND LOSING_STREAK >= VAR_LOBBY_THRESHOLD;

    -- RESET STREAK AFTER BREAKING THRESHOLD
    UPDATE PLAYER
    SET
        LOSING_STREAK = 0
    WHERE LOBBY_ID = VAR_LOBBY_ID
      AND IS_ACTIVE = 1
      AND LOSING_STREAK >= VAR_LOBBY_THRESHOLD;
END;