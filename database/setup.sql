DROP DATABASE IF EXISTS CARD_JUDGE;

CREATE DATABASE CARD_JUDGE
    CHARACTER SET = 'UTF8MB4'
    COLLATE = 'UTF8MB4_UNICODE_CI';

USE CARD_JUDGE;

CREATE TABLE USER
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NOT NULL,
    COLOR_THEME VARCHAR(255) NULL,
    IS_ADMIN BOOLEAN NOT NULL DEFAULT 0,

    PRIMARY KEY (ID),
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER USER_SET_CHANGED_ON_DATE
BEFORE UPDATE ON USER
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE DECK
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NULL,

    PRIMARY KEY (ID),
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER DECK_SET_CHANGED_ON_DATE
BEFORE UPDATE ON DECK
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE CARD_TYPE
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME NVARCHAR(255) NOT NULL,

    PRIMARY KEY (ID),
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER CARD_TYPE_SET_CHANGED_ON_DATE
BEFORE UPDATE ON CARD_TYPE
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE CARD
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    DECK_ID CHAR(36) NOT NULL,
    CARD_TYPE_ID CHAR(36) NOT NULL,
    TEXT VARCHAR(255) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (DECK_ID) REFERENCES DECK (ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_TYPE_ID) REFERENCES CARD_TYPE (ID) ON DELETE RESTRICT,
    CONSTRAINT DECK_TEXT_UNIQUE UNIQUE (DECK_ID, TEXT)
);

CREATE TRIGGER CARD_SET_CHANGED_ON_DATE
BEFORE UPDATE ON CARD
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NULL,
    JUDGE_USER_ID CHAR(36) NULL,
    JUDGE_CARD_ID CHAR(36) NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (JUDGE_USER_ID) REFERENCES USER (ID) ON DELETE SET NULL,
    FOREIGN KEY (JUDGE_CARD_ID) REFERENCES CARD (ID) ON DELETE SET NULL,
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER LOBBY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE USER_ACCESS_DECK
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    USER_ID CHAR(36) NOT NULL,
    DECK_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES USER (ID) ON DELETE CASCADE,
    FOREIGN KEY (DECK_ID) REFERENCES DECK (ID) ON DELETE CASCADE,
    CONSTRAINT USER_DECK_UNIQUE UNIQUE (USER_ID, DECK_ID)
);

CREATE TRIGGER USER_ACCESS_DECK_SET_CHANGED_ON_DATE
BEFORE UPDATE ON USER_ACCESS_DECK
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE USER_ACCESS_LOBBY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    USER_ID CHAR(36) NOT NULL,
    LOBBY_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES USER (ID) ON DELETE CASCADE,
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    CONSTRAINT USER_LOBBY_UNIQUE UNIQUE (USER_ID, LOBBY_ID)
);

CREATE TRIGGER USER_ACCESS_LOBBY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON USER_ACCESS_LOBBY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE DRAW_PILE
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_ID CHAR(36) NOT NULL,
    CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_CARD_UNIQUE UNIQUE (LOBBY_ID, CARD_ID)
);

CREATE TRIGGER DRAW_PILE_SET_CHANGED_ON_DATE
BEFORE UPDATE ON DRAW_PILE
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE PLAYER
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_ID CHAR(36) NOT NULL,
    USER_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USER (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_USER_UNIQUE UNIQUE (LOBBY_ID, USER_ID)
);

CREATE TRIGGER PLAYER_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE PLAYER_CARD
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    PLAYER_ID CHAR(36) NOT NULL,
    LOBBY_ID CHAR(36) NOT NULL,
    USER_ID CHAR(36) NOT NULL,
    CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USER (ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT PLAYER_CARD_UNIQUE UNIQUE (PLAYER_ID, CARD_ID)
);

CREATE TRIGGER PLAYER_CARD_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER_CARD
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE PLAYER_PLAY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    PLAYER_ID CHAR(36) NOT NULL,
    PLAY_CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (PLAY_CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT PLAYER_UNIQUE UNIQUE (PLAYER_ID)
);

CREATE TRIGGER PLAYER_PLAY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER_PLAY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_RESULT
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    PLAYER_ID CHAR(36) NOT NULL,
    JUDGE_USER_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (JUDGE_USER_ID) REFERENCES USER (ID) ON DELETE CASCADE
);

CREATE TRIGGER LOBBY_RESULT_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_RESULT
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();
