DROP DATABASE IF EXISTS CARD_JUDGE;

CREATE DATABASE CARD_JUDGE
    CHARACTER SET = 'UTF8MB4'
    COLLATE = 'UTF8MB4_UNICODE_CI';

USE CARD_JUDGE;

CREATE TABLE PLAYER
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NOT NULL,
    COLOR_THEME VARCHAR(255) NULL,
    IS_ADMIN BOOLEAN NOT NULL DEFAULT 0,

    PRIMARY KEY (ID),
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER PLAYER_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

INSERT INTO PLAYER (NAME, PASSWORD_HASH, IS_ADMIN)
VALUES ('Grant', '$2a$14$t7gWxR3Ak8uBkyPnw4TZz.WcN3nVlbDMEQgqHOuxEfWN3yCL3dgY.', 1);

CREATE TABLE DECK
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NULL,

    PRIMARY KEY (ID),
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER DECK_SET_CHANGED_ON_DATE
BEFORE UPDATE ON DECK
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

INSERT INTO DECK (ID, NAME, PASSWORD_HASH)
VALUES ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Deck One', NULL),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Deck Two', NULL),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Deck Three', '$2a$14$t7gWxR3Ak8uBkyPnw4TZz.WcN3nVlbDMEQgqHOuxEfWN3yCL3dgY.');

CREATE TABLE CARD
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    DECK_ID CHAR(36) NOT NULL,
    TYPE ENUM ('Judge', 'Player') NOT NULL,
    TEXT VARCHAR(255) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (DECK_ID) REFERENCES DECK (ID) ON DELETE CASCADE,
    CONSTRAINT DECK_TEXT_UNIQUE UNIQUE (DECK_ID, TEXT)
);

CREATE TRIGGER CARD_SET_CHANGED_ON_DATE
BEFORE UPDATE ON CARD
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

INSERT INTO CARD (DECK_ID, TYPE, TEXT)
VALUES ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck One - Judge Card 1'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck One - Judge Card 2'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck One - Judge Card 3'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck One - Judge Card 4'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck One - Judge Card 5'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 1'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 2'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 3'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 4'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 5'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 6'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 7'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 8'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 9'),
       ('f395b797-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck One - Player Card 10');

INSERT INTO CARD (DECK_ID, TYPE, TEXT)
VALUES ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Two - Judge Card 1'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Two - Judge Card 2'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Two - Judge Card 3'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Two - Judge Card 4'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Two - Judge Card 5'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 1'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 2'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 3'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 4'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 5'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 6'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 7'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 8'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 9'),
       ('f395b862-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Two - Player Card 10');

INSERT INTO CARD (DECK_ID, TYPE, TEXT)
VALUES ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Three - Judge Card 1'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Three - Judge Card 2'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Three - Judge Card 3'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Three - Judge Card 4'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Judge', 'Deck Three - Judge Card 5'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 1'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 2'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 3'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 4'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 5'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 6'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 7'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 8'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 9'),
       ('f395b8e4-6d89-11ef-aad4-28800dbd8d8a', 'Player', 'Deck Three - Player Card 10');

CREATE TABLE LOBBY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    NAME VARCHAR(255) NOT NULL,
    PASSWORD_HASH CHAR(60) NULL,
    JUDGE_PLAYER_ID CHAR(36) NULL,
    JUDGE_CARD_ID CHAR(36) NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (JUDGE_PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE SET NULL,
    FOREIGN KEY (JUDGE_CARD_ID) REFERENCES CARD (ID) ON DELETE SET NULL,
    CONSTRAINT NAME_UNIQUE UNIQUE (NAME)
);

CREATE TRIGGER LOBBY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE PLAYER_ACCESS_DECK
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    PLAYER_ID CHAR(36) NOT NULL,
    DECK_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (DECK_ID) REFERENCES DECK (ID) ON DELETE CASCADE,
    CONSTRAINT PLAYER_DECK_UNIQUE UNIQUE (PLAYER_ID, DECK_ID)
);

CREATE TRIGGER PLAYER_ACCESS_DECK_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER_ACCESS_DECK
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE PLAYER_ACCESS_LOBBY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    PLAYER_ID CHAR(36) NOT NULL,
    LOBBY_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    CONSTRAINT PLAYER_LOBBY_UNIQUE UNIQUE (PLAYER_ID, LOBBY_ID)
);

CREATE TRIGGER PLAYER_ACCESS_LOBBY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON PLAYER_ACCESS_LOBBY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_CARD
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_ID CHAR(36) NOT NULL,
    CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_CARD_UNIQUE UNIQUE (LOBBY_ID, CARD_ID)
);

CREATE TRIGGER LOBBY_CARD_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_CARD
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_PLAYER
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_ID CHAR(36) NOT NULL,
    PLAYER_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_PLAYER_UNIQUE UNIQUE (LOBBY_ID, PLAYER_ID)
);

CREATE TRIGGER LOBBY_PLAYER_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_PLAYER
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_PLAYER_CARD
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_PLAYER_ID CHAR(36) NOT NULL,
    LOBBY_ID CHAR(36) NOT NULL,
    PLAYER_ID CHAR(36) NOT NULL,
    CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_PLAYER_ID) REFERENCES LOBBY_PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (LOBBY_ID) REFERENCES LOBBY (ID) ON DELETE CASCADE,
    FOREIGN KEY (PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_PLAYER_CARD_UNIQUE UNIQUE (LOBBY_PLAYER_ID, CARD_ID)
);

CREATE TRIGGER LOBBY_PLAYER_CARD_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_PLAYER_CARD
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_PLAYER_PLAY
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_PLAYER_ID CHAR(36) NOT NULL,
    PLAY_CARD_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_PLAYER_ID) REFERENCES LOBBY_PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (PLAY_CARD_ID) REFERENCES CARD (ID) ON DELETE CASCADE,
    CONSTRAINT LOBBY_PLAYER_UNIQUE UNIQUE (LOBBY_PLAYER_ID)
);

CREATE TRIGGER LOBBY_PLAYER_PLAY_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_PLAYER_PLAY
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();

CREATE TABLE LOBBY_RESULT
(
    ID CHAR(36) NOT NULL DEFAULT UUID(),
    CREATED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    CHANGED_ON_DATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),

    LOBBY_PLAYER_ID CHAR(36) NOT NULL,
    JUDGE_PLAYER_ID CHAR(36) NOT NULL,

    PRIMARY KEY (ID),
    FOREIGN KEY (LOBBY_PLAYER_ID) REFERENCES LOBBY_PLAYER (ID) ON DELETE CASCADE,
    FOREIGN KEY (JUDGE_PLAYER_ID) REFERENCES PLAYER (ID) ON DELETE CASCADE
);

CREATE TRIGGER LOBBY_RESULT_SET_CHANGED_ON_DATE
BEFORE UPDATE ON LOBBY_RESULT
FOR EACH ROW
SET NEW.CHANGED_ON_DATE = CURRENT_TIMESTAMP();
